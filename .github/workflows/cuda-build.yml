# This is a basic workflow to help you get started with Actions

name: CUDA Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        compiler: [g++, clang++, msvc]
        exclude:
          - os: ubuntu-latest
            compiler: msvc
          - os: windows-latest
            compiler: g++
          - os: windows-latest
            compiler: clang++

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: Jimver/cuda-toolkit@v0.2.5
        id: cuda-toolkit
        with:
          cuda: '11.5.1'

      - name: Prep Build
          if: matrix.os != 'windows-latest'
          run: echo "CXX=${{ matrix.compiler }}" >> $GITHUB_ENV
        
      - name: Build SCAMP
        shell: bash
        run: |
          set -e
          cd $GITHUB_WORKSPACE
          mkdir build && cd build
          cmake -DFORCE_CUDA=1 ..
          cmake --build . --config Release 
